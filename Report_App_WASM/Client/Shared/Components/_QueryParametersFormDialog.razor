@using Report_App_WASM.Shared.Extensions
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Create" Class="mr-3 mb-n1"/>
            @Localizer.Get("Add")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@_param" @ref="@_form">
            <MudTextField @bind-Value="_param.DisplayName" Label="@Localizer.Get("Display name")" Variant="Variant.Text" Required></MudTextField>
            <MudTextField @bind-Value="_param.ParameterIdentifier" Label="@Localizer.Get("Parameter identifier")" Variant="Variant.Text" Required></MudTextField>
            <MudSelect @bind-Value="_param.ValueType" Label="@Localizer.Get("Select a data type")" Required>
                @foreach (QueryCommandParameterValueType item in Enum.GetValues(typeof(QueryCommandParameterValueType)))
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
            @if (_param.ValueType is QueryCommandParameterValueType.Date or QueryCommandParameterValueType.DateTime)
            {
                <MudSelect @bind-Value="_param.DateOption" Label="@Localizer.Get("Select a date calculation")" Required>
                    @foreach (CalulatedDateOption item in Enum.GetValues(typeof(CalulatedDateOption)))
                    {
                        <MudSelectItem Value="@item">@Localizer.Get(item.ToString())</MudSelectItem>
                    }
                </MudSelect>
                <MudField Label="@Localizer.Get("Calculated date")">@(_param.ValueType == QueryCommandParameterValueType.Date ? _param.DateOption.GetCalculateDateTime().Date.ToString("d") : _param.DateOption.GetCalculateDateTime())</MudField>
            }
            <MudSwitch T="bool" @bind-Value="_param.Required" Label="@Localizer.Get("Required")" Color="Color.Primary" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Info" OnClick="Cancel">@Localizer.Get("Cancel")</MudButton>
        <MudButton Color="Color.Primary" OnClick="Validate">@Localizer.Get("Validate")</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    QueryCommandParameter _param = new();
    private MudForm _form = default!;


    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    private async Task Validate()
    {
        await _form.Validate();
        if (_form.IsValid)
        {
            MudDialog?.Close(DialogResult.Ok(_param));
        }
    }

}