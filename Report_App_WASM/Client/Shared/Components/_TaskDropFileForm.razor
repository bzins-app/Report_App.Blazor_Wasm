@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudIconButton Icon="@Icons.Outlined.FileDownload" OnClick="(()=>OpenRunConfirmationComponent())" Disabled="Item.FileDepositPathConfigurationId == 0 ? true : false"><MudText>@localizer.Get("Drop file")</MudText> </MudIconButton>

@code {
    [Parameter]
    public TaskHeaderDTO Item { get; set; }

    private async Task OpenRunConfirmationComponent()
    {
        bool result = false;

        bool? feedback = await DialogService.ShowMessageBox(
        localizer.Get("Confirm manual job"),
        localizer.Get("Caution !") + " " + localizer.Get("Are you sure you want to create a file to the directory? It could interfer with other processes"),
        yesText: localizer.Get("Validate"), cancelText: localizer.Get("Cancel"));
        result = feedback == null ? false : true;
        if (result)
        {
            RunTaskManually payload = new RunTaskManually { TaskHeaderId = Item.TaskHeaderId, Emails = new List<EmailRecipient>(), CustomQueryParameters = new List<QueryCommandParameter>(), GenerateFiles=true };
            await dataService.PostValues(payload, "RunManually", ApiControllers.BackgroudWorkerApi);
            Snackbar.Add(localizer.Get(Item.TypeName) + " " + localizer.Get("Job on going"), Severity.Success);
        }
        StateHasChanged();

    }
}