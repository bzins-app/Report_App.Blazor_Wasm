@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<MudNavMenu Color="Color.Info" Bordered="true" Margin="Margin.Normal">
    <MudText Typo="Typo.h6" Class="px-4">
        <a href="/">
            <div style="align-items: center; display: flex; font-size: 17px; height: 64px; justify-content: center;">
                <span class="logo-sm">
                    <img src="images/AppLogo.png" style="-webkit-filter: invert(100%)" alt="" height="30">
                </span>
                <span class="logo-lg" style="flex: none;">
                    <span style="color: white; padding-left: 5px">@_appConst?.ApplicationName</span>
                </span>
            </div>
        </a>
    </MudText>
    <MudDivider/>
    <MudNavLink Href="Home" Style="padding-top: 15px" Icon="@Icons.Material.Outlined.Home">@Localizer.Get("Home")</MudNavLink>
    @if (_appConst.ActivateTaskSchedulerModule)
    {
        <MudNavLink Href="DashboardApp" Icon="@Icons.Material.Outlined.AreaChart">@Localizer.Get("Dashboard")</MudNavLink>
    }
    <MudNavGroup Title="@Localizer.Get("Per Connection")" Icon="@Icons.Material.Outlined.Analytics">
        @foreach (var t in _activities.Where(a => a.IsVisible).OrderBy(a => a.ProviderName))
        {
            <AuthorizeView Roles=@(t.ProviderName)>
                <MudNavGroup Title="@t.ProviderName" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">
                    @if (_appConst.ActivateTaskSchedulerModule)
                    {
                        @if (!context.User.IsInRole("Supervisor") || context.User.IsInRole("Admin"))
                        {
                            <MudNavLink Style="@(IsDarkMode ? @_subStyleDark:@_subStyleLight)" Href="@("TasksView/" + t.ProviderName + "/" + t.DataProviderId)">@Localizer.Get("Base view")</MudNavLink>
                        }

                        @if (context.User.IsInRole("Supervisor"))
                        {
                            <MudNavLink Style="@(IsDarkMode ? @_subStyleDark:@_subStyleLight)" Href=@($"TasksPerActivity/Report/{t.DataProviderId}/{t.ProviderName}")>@Localizer.Get("Manage reports")</MudNavLink>
                            <MudNavLink Style="@(IsDarkMode ? @_subStyleDark:@_subStyleLight)"Href="@("RetrieveFiles/" + t.ProviderName + "/" + t.DataProviderId)">@Localizer.Get("Retrieve files")</MudNavLink>
                        }
                    }
                    @if (_appConst.ActivateAdHocQueriesModule && _appConst.ActivateTaskSchedulerModule)
                    {
                        <MudDivider DividerType="DividerType.Inset"/>
                    }
                    @if (_appConst.ActivateAdHocQueriesModule)
                    {
                        <MudNavLink  Style="@(IsDarkMode ? @_subStyleDark:@_subStyleLight)"  Href=@($"QueryStore/{t.DataProviderId}/{t.ProviderName}")>@Localizer.Get("Queries store")</MudNavLink>
                        @if (context.User.IsInRole("Supervisor") || context.User.IsInRole("Admin"))
                        {
                            <MudNavLink  Style="@(IsDarkMode ? @_subStyleDark:@_subStyleLight)"  Href=@($"ManageQueries/{t.DataProviderId}/{t.ProviderName}")>@Localizer.Get("Manage queries")</MudNavLink>
                            <MudDivider DividerType="DividerType.Inset"/>
                            <MudNavLink  Style="@(IsDarkMode ? @_subStyleDark:@_subStyleLight)"  Href=@($"DbExplorer2/{t.DataProviderId}/{t.ProviderName}")>@Localizer.Get("DB explorer")</MudNavLink>
                        }
                    }
                </MudNavGroup>
            </AuthorizeView>
        }
    </MudNavGroup>
    <AuthorizeView Roles="Admin, Supervisor,Demo">
        <Authorized>
            @if (_appConst.ActivateTaskSchedulerModule)
            {
                <MudNavGroup Title="@Localizer.Get("Tasks overview")" Icon="@Icons.Material.Outlined.AddTask">
                    <MudNavLink Href="TaskManager/Report" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Reports")</MudNavLink>
                    <MudNavLink Href="TaskManager/Alert" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Alerts")</MudNavLink>
                    <MudNavLink Href="TaskManager/DataTransfer" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Data transfer")</MudNavLink>
                </MudNavGroup>
            }
            @if (_appConst.ActivateAdHocQueriesModule)
            {
                <MudNavLink Href="ManageQueriesGlobal" Icon="@Icons.Material.Outlined.AddChart">@Localizer.Get("Adhoc queries overview")</MudNavLink>
            }
            <MudDivider DividerType="DividerType.Inset"/>
            <MudNavGroup Title="@Localizer.Get("Logs")" Icon="@Icons.Material.Outlined.AssignmentReturned">
                <MudNavLink Href="AuditTrail" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Audit Trail")</MudNavLink>
                @if (_appConst.ActivateTaskSchedulerModule)
                {
                    <MudNavLink Href="TaskLogs" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Background Tasks")</MudNavLink>
                }
                <MudNavLink Href="QueryExecutionLogs" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Query execution logs")</MudNavLink>
                @if (_appConst.ActivateAdHocQueriesModule)
                {
                    <MudNavLink Href="AdhocQueriesLogs" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Adhoc queries logs")</MudNavLink>
                }
                <MudNavLink Href="SystemLogs" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("System")</MudNavLink>
            </MudNavGroup>
            <MudNavGroup Title="@Localizer.Get("Base parameters")" Icon="@Icons.Material.Outlined.SettingsApplications">
                <MudNavLink Href="BaseParameters" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Application parameters")</MudNavLink>
                <MudNavLink Href="ConnectionsManager" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Connections manager")</MudNavLink>
                @if (_appConst.ActivateTaskSchedulerModule)
                {
                    <MudNavLink Href="DepositPath" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Deposit path")</MudNavLink>
                    <MudNavLink Href="/swagger" Target="_blank" Style="@(IsDarkMode ? @_upperStyleDark:@_upperStyleLight)">@Localizer.Get("Swagger")</MudNavLink>
                }
            </MudNavGroup>
            <MudNavLink Href="UsersManagement" Icon="@Icons.Material.Outlined.SupervisedUserCircle">@Localizer.Get("Users")</MudNavLink>
            @if (_appConst.ActivateTaskSchedulerModule)
            {
                @if (context.User.IsInRole("Admin"))
                {
                    <MudNavLink Href="/Hangfire" Target="_blank" Icon="@Icons.Material.Outlined.Tune">@Localizer.Get("HangFire")</MudNavLink>
                }
                else
                {
                    <MudNavLink Href="/HangfireRead" Target="_blank" Icon="@Icons.Material.Outlined.Tune">@Localizer.Get("HangFire")</MudNavLink>
                }
            }
            <MudDivider DividerType="DividerType.Inset"/>
        </Authorized>
    </AuthorizeView>
    <MudNavLink Href="https://github.com/bzins-app/Report_App.Blazor_Wasm/wiki" Target="_blank" Icon="@Icons.Material.Outlined.QuestionMark">@Localizer.Get("Help")</MudNavLink>
</MudNavMenu>
<MudDivider Class="mt-auto" Style="flex-grow: unset !important"></MudDivider>
<MudNavMenu Class="d-flex justify-space-between pa-4">
    <MudLink Href="https://github.com/bzins-app/Report_App.Blazor_Wasm" Target="_blank" Style="color: #6F6F6F !important; font-size: 0.625rem; line-height: 1.125rem;">@@@ApplicationInfo.VersionYear</MudLink>
    <MudText Class="" Style="color: #6F6F6F !important; font-size: 0.625rem; line-height: 1.125rem;">version @ApplicationInfo.ApplicationVersion</MudText>
</MudNavMenu>

@code {

    [Parameter] public bool IsDarkMode { get; set; }

    private List<SelectItemDataproviderInfo> _activities = new();
    private ApplicationConstantsValues _appConst = new();
    private const string _upperStyleDark = "background:#0e1824cc;";
    private const string _subStyleDark = "background:#0C1520;";
    private const string _upperStyleLight = "background:#000c17;";
    private const string _subStyleLight = "background:#000A14;";

    protected override async Task OnInitializedAsync()
    {
        _appConst = (await AppService.GetApplicationConstantsValues())!;
        _activities = await DataService.GetValues<SelectItemDataproviderInfo>("ActivitiesInfo", ApiControllers.ApplicationParametersApi);
    }

}