@using ApexCharts
@using Color = MudBlazor.Color
@if (_taskLogs == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <ApexChart TItem="TaksLogsValues"
               Title="@Localizer.Get("Background taks")"
               XAxisType="XAxisType.Datetime" Height="@Height"
               Options="_options" @ref="_chart">

        <ApexPointSeries TItem="TaksLogsValues"
                         Items="_taskLogs"
                         Name="@Localizer.Get("Job duration")"
                         SeriesType="SeriesType.Line"
                         XValue="@(e => e.Date.ToLocalTime())"
                         YAggregate="@(e => (decimal?)e.Sum(a => a.TotalDuration / 60.0))"
                         OrderBy="e => e.X" />


        <ApexPointSeries TItem="TaksLogsValues"
                         Items="_taskLogs"
                         Name="@Localizer.Get("Nbr of errors")"
                         SeriesType="SeriesType.Line"
                         XValue="@(e => e.Date.ToLocalTime())"
                         YAggregate="@(e => e.Sum(a => a.NbrErrors))"
                         OrderBy="e => e.X" />
    </ApexChart>
}


@code {

    [Parameter] public string? Height { get; set; } = null;

    [Parameter] public List<TaksLogsValues>? _taskLogs { get; set; }

    private ApexChartOptions<TaksLogsValues> _options = new();
    private ApexChart<TaksLogsValues>? _chart;

    protected override void OnInitialized()
    {
        //  _taskLogs = await DataService.GetValues<TaksLogsValues>("TasksLogs", "api/Dashboard/");
        //options.Chart.Stacked = true;
        _options.Tooltip = new Tooltip { X = new TooltipX { Format = @"dd \ MM \ yyyy" } };
        _options.Theme = new Theme { Palette = PaletteType.Palette7 };
        _options.Colors = new List<string> { "#008FFB", "#FF4560", "#FEB019" };
        _options.Stroke = new Stroke { Curve = Curve.Smooth, Width = 2 };
        //Stacked 100% test
        //options.Chart = new Chart { Stacked = true, Type = ChartType.Bar, StackType = StackType.Percent100 };
        //options.Chart.Toolbar = new Toolbar { Show = false };

        _options.Yaxis = new List<YAxis>();

        _options.Yaxis.Add(new YAxis
            {
                Title = new AxisTitle { Text = Localizer.Get("Job duration") },
                SeriesName = Localizer.Get("Job duration")
            });

        _options.Yaxis.Add(new YAxis
            {
                Title = new AxisTitle { Text = Localizer.Get("Job duration") },
                SeriesName = Localizer.Get("Job duration"),
                DecimalsInFloat = 0,
                Opposite = true
            });
    }

    public async Task Refresh()
    {
        await _chart.UpdateSeriesAsync(false);
    }

}