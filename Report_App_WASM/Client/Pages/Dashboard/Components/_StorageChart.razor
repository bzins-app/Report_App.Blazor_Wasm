@using ApexCharts
@using Color = MudBlazor.Color
@if (_logs == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <ApexChart TItem="ApplicationLogReportResultDto"
           Title="@(Localizer.Get("Storage per report")+":"+Localizer.Get("Total size in MB"))"
           Height="@Height"
           Options="_options"
           @ref=_chart>

        <ApexPointSeries TItem="ApplicationLogReportResultDto"
                     Items="_logs"
                     Name="@Localizer.Get("Total size in MB")"
                     SeriesType="SeriesType.Treemap"
                     XValue="@(e => e.ReportName!)"
                     YAggregate="@(e => (decimal)e.Sum(a=>Math.Round( a.FileSizeInMb,2)))" OrderByDescending="@(e=>e.Y!)"/>
    </ApexChart>
}



@code {
    [Parameter] public string? Height { get; set; } = null;

    private List<ApplicationLogReportResultDto>? _logs;
    private ApexChartOptions<ApplicationLogReportResultDto> _options = new();
    private ApexChart<ApplicationLogReportResultDto>? _chart;

    protected override async Task OnInitializedAsync()
    {
        _logs = await DataService.GetValues<ApplicationLogReportResultDto>("StorageInfo", "api/Dashboard/");
    }
}