@using ApexCharts
@using Color = MudBlazor.Color
@if (_isLoading)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7"/>
}
else
{
    <ApexChart TItem="StorageData"
               Title="@(Localizer.Get("Storage per report") + ":" + Localizer.Get("Total size in MB"))"
               Height="@Height"
               Options="_options"
               @ref=_chart>

        <ApexPointSeries TItem="StorageData"
                         Items="_logs"
                         Name="@Localizer.Get("Total size in MB")"
                         SeriesType="SeriesType.Treemap"
                         XValue="@(e => e.ReportName!)"
                         YAggregate="@(e => (decimal)e.Sum(a => Math.Round(a.FileSizeInMb, 2)))" OrderByDescending="@(e => e.Y!)"/>
    </ApexChart>
}


@code {

    [Parameter] public string? Height { get; set; } = null;

    private List<StorageData>? _logs;
    private ApexChartOptions<StorageData> _options = new();
    private ApexChart<StorageData>? _chart;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        _logs = await DataService.GetValues<StorageData>("StorageInfo", ApiControllers.DashboardApi);
        _isLoading = false;
    }

}