@using ApexCharts
@using Color = MudBlazor.Color
@if (_taskLogs == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}
else
{
    <ApexChart TItem="TaksLogsValues"
           Title="@Localizer.Get("Tasks per type")"
           XAxisType="XAxisType.Datetime" Height="@Height"
           Options="_options" @ref="_chart">

        <ApexPointSeries TItem="TaksLogsValues"
                     Items="_taskLogs.Where(a=>a.TypeTask!.Contains(_reportFilter))"
                     Name="@Localizer.Get("Reports")"
                     SeriesType="SeriesType.Bar"
                     XValue="@(e => e.Date.ToLocalTime())"
                     YAggregate="@(e => e.Sum(a=>a.NbrTasks))"
                     OrderBy="e=>e.X" />

        <ApexPointSeries TItem="TaksLogsValues"
                     Items="_taskLogs.Where(a=>a.TypeTask!.Contains(_alertFilter))"
                     Name="@Localizer.Get("Alerts")"
                     SeriesType="SeriesType.Bar"
                     XValue="@(e => e.Date.Date.ToLocalTime())"
                     YAggregate="@(e => e.Sum(a=>a.NbrTasks))"
                     OrderBy="e=>e.X" />

        <ApexPointSeries TItem="TaksLogsValues"
                     Items="_taskLogs.Where(a=>a.TypeTask!.Contains(_dataFilter))"
                     Name="@Localizer.Get("Data transfer")"
                     SeriesType="SeriesType.Bar"
                     XValue="@(e => e.Date.Date.ToLocalTime())"
                     YAggregate="@(e => e.Sum(a=>a.NbrTasks))"
                     OrderBy="e=>e.X" />
</ApexChart>
}


@code {
    [Parameter] public string? Height { get; set; } = null;
    [Parameter] public List<TaksLogsValues>? _taskLogs { get; set; }
    private ApexChartOptions<TaksLogsValues> _options = new();
    private ApexChart<TaksLogsValues>? _chart;
    private string _reportFilter="Report";
    private string _alertFilter = "Alert";
    private string _dataFilter = "Data";

    protected override void OnInitialized()
    {
       // _taskLogs = await DataService.GetValues<TaksLogsValues>("TasksLogs", "api/Dashboard/");
        _options.Chart.Stacked = true;
        _options.Tooltip = new Tooltip { X = new TooltipX { Format = @"dd \ MM \ yyyy" } };
        _options.Theme = new Theme { Palette = PaletteType.Palette8 };
        //options.Colors = new List<string> { "#008FFB", "#FF4560", "#FEB019" };
        _options.Stroke=new Stroke { Curve = Curve.Smooth, Width=2 };
        //Stacked 100% test
        //options.Chart = new Chart { Stacked = true, Type = ChartType.Bar, StackType = StackType.Percent100 };
        //options.Chart.Toolbar = new Toolbar { Show = false };
    }
}
