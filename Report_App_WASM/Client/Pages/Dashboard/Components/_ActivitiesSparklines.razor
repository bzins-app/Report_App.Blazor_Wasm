@using ApexCharts

@if (_taskLogs == null)
{
    <MudProgressLinear Color="MudBlazor.Color.Primary" Indeterminate="true" Class="my-7"/>
}
else
{
    <MudTable Items="GetFilteredTaskLogs()" Height="460px" Virtualize="true" Breakpoint="Breakpoint.Sm" HorizontalScrollbar="true" FixedHeader="true" Dense="true">
        <HeaderContent>
            <MudTh>@Localizer.Get("Activity")</MudTh>
            <MudTh>@Localizer.Get("Nbr of tasks over the last 10 days")</MudTh>
            <MudTh>@Localizer.Get("Type of tasks")</MudTh>
            <MudTh>@Localizer.Get("Tasks per day")</MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd>@context.Key</MudTd>
            <MudTd>@context.Sum(a => a.NbrTasks)</MudTd>
            <MudTd>
                <ApexChart TItem="TaksLogsValues"
                           Width="30"
                           Height="30"
                           Options="GetPieOptions()">

                    <ApexPointSeries TItem="TaksLogsValues"
                                     Items="context.ToList()"
                                     Name="@Localizer.Get("Type of tasks")"
                                     SeriesType="SeriesType.Pie"
                                     XValue="@(e => e.TypeTask)"
                                     YAggregate="@(e => e.Sum(a => a.NbrTasks))"/>

                </ApexChart>
            </MudTd>
            <MudTd>
                <ApexChart TItem="TaksLogsValues"
                           XAxisType="XAxisType.Datetime"
                           Options="GetBarOptions()"
                           Height="30"
                           Width="150">

                    <ApexPointSeries TItem="TaksLogsValues"
                                     Items="context.ToList()"
                                     Name="@Localizer.Get("Tasks per day")"
                                     SeriesType="SeriesType.Bar"
                                     XValue="@(e => e.Date.ToLocalTime())"
                                     YAggregate="@(e => e.Count())"
                                     OrderBy="e => e.X"/>
                </ApexChart>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {

    [Parameter] public List<TaksLogsValues>? _taskLogs { get; set; }

    private IOrderedEnumerable<IGrouping<string?, TaksLogsValues>> GetFilteredTaskLogs()
    {
        return _taskLogs!
            .Where(a => a.Date >= DateTime.Now.Date.AddDays(-10))
            .GroupBy(e => e.ActivityName)
            .OrderByDescending(a => a.Sum(taksLogsValues => taksLogsValues.NbrTasks));
    }

    private ApexChartOptions<TaksLogsValues> GetPieOptions()
    {
        return new ApexChartOptions<TaksLogsValues>
        {
            Stroke = new Stroke { Width = 1 },
            Tooltip = new Tooltip { Fixed = new TooltipFixed { Enabled = false } },
            Chart = new Chart { Sparkline = new ChartSparkline(), Animations = new Animations { Enabled = false } },
            PlotOptions = new PlotOptions { Pie = new PlotOptionsPie { ExpandOnClick = false } }
        };
    }

    private ApexChartOptions<TaksLogsValues> GetBarOptions()
    {
        return new ApexChartOptions<TaksLogsValues>
        {
            Chart = new Chart { Sparkline = new ChartSparkline(), Animations = new Animations { Enabled = false } },
            PlotOptions = new PlotOptions { Bar = new PlotOptionsBar { ColumnWidth = "85%" } },
            Tooltip = new Tooltip { X = new TooltipX { Format = @" dd \ MM \ yyyy" } }
        };
    }
}