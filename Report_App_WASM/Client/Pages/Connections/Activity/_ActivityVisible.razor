@inject ISnackbar Snackbar

<MudSwitch Style="justify-content: center" Value="@Item!.IsVisible" Color="Color.Primary" ThumbIcon="@(Item.IsVisible ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(Item.IsVisible ? Color.Success : Color.Error)" ValueChanged="(bool value) => ChangeStatusAsync(value)"/>

@code {

    [Parameter] public DataProviderDto? Item { get; set; }

    private async Task ChangeStatusAsync(bool value)
    {
        Item!.IsVisible = value;
        var result = await DataService.PostValues(Item, "ActivityUpdate");
        if (!result.Success)
        {
            Item.IsVisible = !value;
            Snackbar.Add(Localizer.Get("An error has occurred"), Severity.Error);
            if (result.Message != null) Snackbar.Add(result.Message, Severity.Error);
            return;
        }

        Snackbar.Add(Item.IsVisible ? Item.ProviderName + " " + Localizer.Get("is diplayed") : Item.ProviderName + " " + Localizer.Get("is not displayed"), Item.IsVisible ? Severity.Success : Severity.Normal);
    }

}