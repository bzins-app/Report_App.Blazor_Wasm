@inject ISnackbar Snackbar

<MudIconButton OnClick="(()=>OpenRunConfirmationComponent())" Icon="@Icons.Material.Filled.ContentCopy" />

<MudDialog @bind-IsVisible="visible" Options="dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            @Localizer.Get("Confirm duplication")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="name" Label="@Localizer.Get("Report title")" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CancelDialog">@Localizer.Get("Cancel")</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="ConfirmDuplicate" Class="px-10">@Localizer.Get("Validate")</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public SimpleGrid<TaskHeaderDTO> dataGrid { get; set; }
    [Parameter]
    public TaskHeaderDTO Item { get; set; }
    string name = "";

    private bool visible;
    private DialogOptions dialogOptions = new() { CloseOnEscapeKey = false, DisableBackdropClick = true, MaxWidth = MaxWidth.Small, FullWidth = true };
    private void OpenRunConfirmationComponent()
    {
        name = Item.TaskName + " (Copy)";
        visible = true;
    }

    private async Task ConfirmDuplicate()
    {
        visible = false;
        await Clone(name, Item.TaskHeaderId);
        Snackbar.Add(Localizer.Get("Object added"), Severity.Success);
        await dataGrid.RefreshDataAsync();


    }
    void CancelDialog() => visible = false;

    private async Task Clone(string name, int taskHeaderId)
    {
        DuplicateTask payload = new DuplicateTask { Name = name, TaskHeaderId = taskHeaderId };
        var result = await DataService.PostValues(payload, "TaskClone");
        if (!result.Success)
        {
            Snackbar.Add(Localizer.Get("An error has occurred"), Severity.Error);
            Snackbar.Add(result.Message, Severity.Error);
        }
    }


}