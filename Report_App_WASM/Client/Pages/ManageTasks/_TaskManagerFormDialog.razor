
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(Action switch
                           {
                               CrudAction.Update => Icons.Material.Filled.Edit,
                               CrudAction.Create => Icons.Material.Filled.Create,
                               _ => Icons.Material.Filled.DeleteForever
                               } )" Class="mr-3 mb-n1" />
            @Localizer.Get(Action switch
            {
                CrudAction.Update => "Edit",
                CrudAction.Create => "Add",
                _ => "Delete"
                })
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Item" @ref="@_form">
            <MudTextField @bind-Value="Item!.TaskName" Label="@(Item?.TypeName==TaskType.Report.ToString()? Localizer.Get("Report title"):Item?.TypeName==TaskType.DataTransfer.ToString()?  Localizer.Get("Job title"): Localizer.Get("Alert title"))" Required RequiredError="@Localizer.Get("Required")" Disabled="Action==CrudAction.Delete" />
            <MudSelect T="string" Label="@Localizer.Get("Activity name")" @bind-Value="@Item!.ActivityName" AnchorOrigin="Origin.BottomCenter"
                       Required RequiredError="@Localizer.Get("Required")" Disabled="Action==CrudAction.Delete">
                @foreach (var value in _activities)
                {
                    <MudSelectItem Value="@value.ActivityName">@value.ActivityName</MudSelectItem>
                }
            </MudSelect>
            @if (Item?.TypeName == TaskType.Report.ToString())
            {
                <MudSelect  Label="@Localizer.Get("Type of file")" @bind-Value="@Item.TypeFile" AnchorOrigin="Origin.BottomCenter"
                       Required RequiredError="@Localizer.Get("Required")" Disabled="Action==CrudAction.Delete">
                    @foreach (FileType item in Enum.GetValues(typeof(FileType)))
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                </MudSelect>
            }
        </MudForm>
        @if (Action == CrudAction.Delete)
        {
                <MudTextField @bind-Value="_deletionValidation" Label="@(Localizer.Get("Confirm the deletion by entering")+": Validate")" Required RequiredError="@Localizer.Get("Required")" />
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Info" OnClick="Cancel">@Localizer.Get("Cancel")</MudButton>
        <MudButton Color="Action==CrudAction.Delete?Color.Error:Color.Primary" OnClick="Validate">@Localizer.Get(Action==CrudAction.Delete?"Delete":"Validate")</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Parameter] public TaskHeaderDto? Item { get; set; }
    [Parameter] public CrudAction Action { get; set; }
    private MudForm _form = default!;
    private string? _deletionValidation;
    private List<SelectItemActivitiesInfo> _activities = new();

    protected override async Task OnInitializedAsync()
    {
        _activities = await DataService.GetValues<SelectItemActivitiesInfo>("ActivitiesInfo", ApiControllers.ApplicationParametersApi);
    }

    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    private async Task Validate()
    {
        if (Action == CrudAction.Delete)
        {
            if (_deletionValidation == "Validate")
            {
                Item!.Activity = new() { ActivityId = _activities.Where(a => a.ActivityName == Item.ActivityName).Select(a => a.ActivityId).FirstOrDefault(), ActivityName = Item.ActivityName };
                MudDialog?.Close(DialogResult.Ok(Item));
            }
        }
        else
        {
            Item!.Activity = new() { ActivityId=_activities.Where(a=>a.ActivityName==Item.ActivityName).Select(a=>a.ActivityId).FirstOrDefault(), ActivityName=Item.ActivityName};
            Item.IdActivity = Item.Activity.ActivityId;
            await _form.Validate();
            if (_form.IsValid&&Item.Activity is not null)
            {
                
                MudDialog?.Close(DialogResult.Ok(Item));
            }
        }
    }
}