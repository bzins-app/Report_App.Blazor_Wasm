@using Report_App_WASM.Client.Pages.UserAccount
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(Action switch { CrudAction.Update => Icons.Material.Filled.Edit, CrudAction.Create => Icons.Material.Filled.Create, _ => Icons.Material.Filled.DeleteForever })" Class="mr-3 mb-n1"/>
            @Localizer.Get(Action switch
            {
                CrudAction.Update => "Edit",
                CrudAction.Create => "Add",
                _ => "Delete"
            })
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Model" @ref="@_form" Validation="@(_userValidator?.ValidateValue)">
            <MudTextField @bind-Value="Model.UserName" Label="@Localizer.Get("Name")" For="@(() => Model.UserName)" Disabled="Action != CrudAction.Create" Required="Action==CrudAction.Create" />
            <MudTextField @bind-Value="Model.Email" Label="@Localizer.Get("Email")" For="@(() => Model.Email)" InputType="InputType.Email" Disabled="Action != CrudAction.Create" Required="Action==CrudAction.Create" />
            <MudTextField @bind-Value="Model.Password" Label="@Localizer.Get("Password")" For="@(() => Model.Password)" InputType="InputType.Password" Disabled="Action != CrudAction.Create" Required="Action==CrudAction.Create" />
            <MudTextField @bind-Value="Model.ConfirmPassword" Label="@Localizer.Get("Confirm password")" For="@(() => Model.ConfirmPassword)" InputType="InputType.Password" Disabled="Action != CrudAction.Create" Required="Action==CrudAction.Create" />
        </MudForm>
        @if (Action == CrudAction.Delete)
        {
            <MudTextField @bind-Value="_deletionValidation" Label="@(Localizer.Get("Confirm the deletion by entering") + ": Validate")" Required RequiredError="@Localizer.Get("Required")"/>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Info" OnClick="Cancel">@Localizer.Get("Cancel")</MudButton>
        <MudButton Color="Action == CrudAction.Delete ? Color.Error : Color.Primary" OnClick="Validate">@Localizer.Get(Action == CrudAction.Delete ? "Delete" : "Validate")</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    [Parameter] public ApplicationUserDto Item { get; set; } = null!;

    [Parameter] public CrudAction Action { get; set; }

    private MudForm? _form;
    private UserFormModel Model { get; } = new();
    private string? _deletionValidation;
    private UserFormModelValidator? _userValidator;

    protected override void OnParametersSet()
    {
        _userValidator = new UserFormModelValidator(Localizer);
        base.OnParametersSet();
    }

    protected override async Task OnInitializedAsync()
    {
        Model.Options = await AppService.GetIdentityOptionsAsync();
        Model.UserName = Item.UserName;
        Model.Id = Item.Id.ToString();
        Model.Email = Item.Email;
    }

    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    private async Task Validate()
    {
        if (Action == CrudAction.Delete)
        {
            if (_deletionValidation == "Validate")
            {
                MudDialog?.Close(DialogResult.Ok(Item));
            }
        }
        else
        {
            await _form?.Validate()!;
            if (_form.IsValid)
            {
                Item.Email = Model.Email;
                Item.UserName = Model.UserName;
                Item.PasswordHash = Model.Password;
                Item.Email = Model.Email;
                MudDialog?.Close(DialogResult.Ok(Item));
            }

            Item.Email = Model.Email;
            Item.UserName = Model.UserName;
            Item.PasswordHash = Model.Password;
            Item.Email = Model.Email;
            Item.CreateDateTime = DateTime.Now;
            Item.ModDateTime = DateTime.Now;

            MudDialog?.Close(DialogResult.Ok(Item));
        }
    }

}