@using Report_App_WASM.Client.Pages.UserAccount
@using Microsoft.AspNetCore.Identity

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@(Action==CrudAction.Update? Icons.Material.Filled.Edit:Action==CrudAction.Create?Icons.Material.Filled.Create:Icons.Material.Filled.DeleteForever )" Class="mr-3 mb-n1" />
            @Localizer.Get(Action == CrudAction.Update ? "Edit" : Action == CrudAction.Create ? "Add" : "Delete")
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Model" @ref="@_form" Validation="@(_userValidator.ValidateValue)" >
            <MudTextField @bind-Value="Model.UserName" Label="@Localizer.Get("Name")" For="@(()=>Model.UserName)" Disabled="Action==CrudAction.Create?false:true" />
            <MudTextField @bind-Value="Model.Email" Label="@Localizer.Get("Email")" For="@(()=>Model.Email)" InputType="InputType.Email" Disabled="Action==CrudAction.Create?false:true" />
            <MudTextField @bind-Value="Model.Password" Label="@Localizer.Get("Password")" For="@(()=>Model.Password)" InputType="InputType.Password" Disabled="Action==CrudAction.Create?false:true" />
            <MudTextField @bind-Value="Model.ConfirmPassword" Label="@Localizer.Get("Confirm Password")" For="@(()=>Model.ConfirmPassword)" InputType="InputType.Password" Disabled="Action==CrudAction.Create?false:true" />
        </MudForm>
        @if (Action == CrudAction.Delete)
        {
                <MudTextField @bind-Value="_deletionValidation" Label="@(Localizer.Get("Confirm the deletion by entering")+": Validate")" Required RequiredError="@Localizer.Get("Required")" />
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Info" OnClick="Cancel">@Localizer.Get("Cancel")</MudButton>
        <MudButton Color="Action==CrudAction.Delete?Color.Error:Color.Primary" OnClick="Validate">@Localizer.Get(Action==CrudAction.Delete?"Delete":"Validate")</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public ApplicationUser Item { get; set; }
    [Parameter] public CrudAction Action { get; set; }
    private MudForm _form = default!;
    private UserFormModel Model { get; set; } = new();
    private string _deletionValidation;
    private UserFormModelValidator _userValidator ;

    protected override void OnParametersSet()
    {
        _userValidator = new(Localizer);
        base.OnParametersSet();
    }

    protected override void OnInitialized()
    {
        Model.Options = new();
        Model.UserName = Item.UserName;
        Model.Id = Item.Id.ToString();
        Model.Email = Item.Email;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Validate()
    {
        if (Action == CrudAction.Delete)
        {
            if (_deletionValidation == "Validate")
            {
                MudDialog.Close(DialogResult.Ok(Item));
            }
        }
        else
        {
            //await form.Validate();
            //if (form.IsValid)
            //{
            //    Item.Email = model.Email;
            //    Item.UserName = model.UserName;
            //    Item.PasswordHash = model.Password;
            //    Item.Email = model.Email;
            //    MudDialog.Close(DialogResult.Ok(Item));
            //}

            Item.Email = Model.Email;
            Item.UserName = Model.UserName;
            Item.PasswordHash = Model.Password;
            Item.Email = Model.Email;
            Item.CreateDateTime = DateTime.Now;
            Item.ModDateTime = DateTime.Now;

            MudDialog.Close(DialogResult.Ok(Item));
        }
    }
}