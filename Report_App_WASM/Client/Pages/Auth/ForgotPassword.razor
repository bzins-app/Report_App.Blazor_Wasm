@page "/ForgotPassword"
@using System.Text
@using System.ComponentModel.DataAnnotations
@layout _LoginLayout
@inject NavigationManager NavigationManager

<PageTitle>@Localizer.Get("Forgot your password? Enter your email")</PageTitle>


@if (_validated)
{
    <div class="auth-wrapper offline">
        <div class="text-center">
            <h1 class="mb-4">@Localizer.Get("Forgot password confirmation")</h1>
            <h5 class="text-muted mb-4">@Localizer.Get("Please check your email to reset your password.")</h5>
            <button @onclick="BacktoHome" class="btn btn-primary mb-4">@Localizer.Get("Back to home")</button>
        </div>
    </div>

}
else
{    @if (string.IsNullOrEmpty(error))
    {
        <MudForm Model="Input" @ref="_form">
            <div asp-validation-summary="All" class="text-danger"></div>
            <h3 class="mb-4">@Localizer.Get("Forgot your password? Enter your email")</h3>
            <div class="input-group mb-3">
                <input asp-for="Input.Email" type="text" class="form-control" placeholder="@Localizer.Get("Email")">
            </div>
            <button @onclick="SendPasswordReset" class="btn btn-primary shadow-2 mb-4">"@Localizer.Get("Validate")"</button>
            <p class="mb-2 text-muted">@Localizer.Get("Back to login page?") <MudLink Href="login">@Localizer.Get("Login")</MudLink></p>
        </MudForm>
    }
    else
    {
        <h5 class="text-muted mb-4">@Localizer.Get(error)</h5>
    }

}


@code {

    private bool _validated;
    private InputModel? Input { get; set; }
    private MudForm? _form;
    private string? error;

    private class InputModel
    {
        [Required]
        [EmailAddress]
        public string? Email { get; set; }
    }

    private async Task SendPasswordReset()
    {
        await _form?.Validate();
        if (_form.IsValid)
        {
            var payload = new UserPayload { UserMail = Input.Email};
            var result = await DataService.PostValues(payload, "SendResetPasswordEmail", ApiControllers.AuthorizeApi);
            _validated = result.Success;
            error = result.Message;
        }
    }



    private void BacktoHome()
    {
        NavigationManager.NavigateTo("/login");
    }
}